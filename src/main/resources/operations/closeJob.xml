<!--
  ~ Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).
  ~
  ~ WSO2 LLC. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<template xmlns="http://ws.apache.org/ns/synapse" name="closeJob">
    <parameter name="jobId" description="Job ID"/>
    <sequence>
        <property name="jobId" expression="$func:jobId"/>
        <class name="org.wso2.carbon.esb.connector.operations.CloseJob"/>
        <property name="uri.var.url" expression="get-property('closeJobUrl')"/>
        <property name="uri.var.accessToken" expression="get-property('accessToken')"/>
        <filter source="boolean($ctx:uri.var.accessToken)" regex="true">
            <then>
                <header name="Authorization"
                        expression="fn:concat('Bearer ', $ctx:uri.var.accessToken )"
                        scope="transport"/>
                <payloadFactory media-type="json">
                    <format>
                        <![CDATA[{ "state" : "UploadComplete" }]]>
                    </format>
                    <args/>
                </payloadFactory>
                <call>
                    <endpoint>
                        <http method="patch" uri-template="{uri.var.url}">
                            <timeout>
                                <duration>60000</duration>
                                <responseAction>fault</responseAction>
                            </timeout>
                            <suspendOnFailure>
                                <initialDuration>2000</initialDuration>
                                <progressionFactor>1.0</progressionFactor>
                                <maximumDuration>3000</maximumDuration>
                            </suspendOnFailure>
                        </http>
                    </endpoint>
                </call>
                <property expression="$axis2:HTTP_SC" name="httpCode" scope="default" type="STRING"/>
                <filter regex="40(?:1|3|7|9)|44(?:0|1)|45(?:1|9)|499" source="$ctx:httpCode">
                    <then>
                        <property name="uri.var.clientId" expression="get-property('clientId')"/>
                        <property name="uri.var.clientSecret" expression="get-property('clientSecret')"/>
                        <property name="uri.var.refreshToken" expression="get-property('refreshToken')"/>
                        <property name="uri.var.tokenUrl" expression="get-property('tokenUrl')"/>
                        <payloadFactory media-type="json">
                            <format>
                                <![CDATA[{ "state" : "UploadComplete" }]]>
                            </format>
                            <args/>
                        </payloadFactory>
                        <call>
                            <endpoint>
                                <http method="patch" uri-template="{uri.var.url}">
                                    <timeout>
                                        <duration>60000</duration>
                                        <responseAction>fault</responseAction>
                                    </timeout>
                                    <suspendOnFailure>
                                        <initialDuration>2000</initialDuration>
                                        <progressionFactor>1.0</progressionFactor>
                                        <maximumDuration>3000</maximumDuration>
                                    </suspendOnFailure>
                                    <authentication>
                                        <oauth>
                                            <authorizationCode>
                                                <refreshToken>{$ctx:uri.var.refreshToken}</refreshToken>
                                                <clientId>{$ctx:uri.var.clientId}</clientId>
                                                <clientSecret>{$ctx:uri.var.clientSecret}</clientSecret>
                                                <tokenUrl>{$ctx:uri.var.tokenUrl}</tokenUrl>
                                                <authMode>Header</authMode>
                                            </authorizationCode>
                                        </oauth>
                                    </authentication>
                                </http>
                            </endpoint>
                        </call>
                    </then>
                    <else/>
                </filter>
            </then>
            <else>
                <property name="uri.var.clientId" expression="get-property('clientId')"/>
                <property name="uri.var.clientSecret" expression="get-property('clientSecret')"/>
                <property name="uri.var.refreshToken" expression="get-property('refreshToken')"/>
                <property name="uri.var.tokenUrl" expression="get-property('tokenUrl')"/>
                <payloadFactory media-type="json">
                    <format>
                        <![CDATA[{ "state" : "UploadComplete" }]]>
                    </format>
                    <args/>
                </payloadFactory>
                <call>
                    <endpoint>
                        <http method="patch" uri-template="{uri.var.url}">
                            <timeout>
                                <duration>60000</duration>
                                <responseAction>fault</responseAction>
                            </timeout>
                            <suspendOnFailure>
                                <initialDuration>2000</initialDuration>
                                <progressionFactor>1.0</progressionFactor>
                                <maximumDuration>3000</maximumDuration>
                            </suspendOnFailure>
                            <authentication>
                                <oauth>
                                    <authorizationCode>
                                        <refreshToken>{$ctx:uri.var.refreshToken}</refreshToken>
                                        <clientId>{$ctx:uri.var.clientId}</clientId>
                                        <clientSecret>{$ctx:uri.var.clientSecret}</clientSecret>
                                        <tokenUrl>{$ctx:uri.var.tokenUrl}</tokenUrl>
                                        <authMode>Header</authMode>
                                    </authorizationCode>
                                </oauth>
                            </authentication>
                        </http>
                    </endpoint>
                </call>
            </else>
        </filter>
    </sequence>
</template>
